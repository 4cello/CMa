;
;  int x = 42;
;  int y;
;
;  int add(int x, int y){
;    int z = 20;
;    return x + y + z;
;  }
;
;  int main(){
;    int a = 30;
;    int b = 40;
;    int c = add( a, b );
;    print c;
;  }

;===============================================
;    define the global variables and assign the values

       loadc 42   ; define and initialize global var x=42
       alloc 1    ; define global var y,  no initialization
       
       
;===============================================
;    set up the program call to main, and halt
       
       alloc 1    ; allocate space for return of int main()
       mark       ; create stack frame (EP|FP|PC)
       loadc main ; put address of main on stack
       call 0     ; call main function, no arguments
       halt       ;
       
;===============================================
;    the main function
       
 main: enter 3    ; there are three items for the stack (a,b,c)
       loadc 30   ; a = 30
       loadc 40   ; b = 40
       alloc 1    ; allocate c
       alloc 1    ; ready to call, allocate return value
       mark       ; create stack frame
       loadr 1    ; put first formal param on stack
       loadr 2    ; put second param on top
       loadc add  ; set up addr to call
       call 2     ; two formal parameters
       storer 3   ; put return value in local var c (third local var)
       loadr 3    ; copy c to top of stack
       print      ; print the top of stack
       return     ;
       
;===============================================
;   define the function add 

 add:  enter 2    ;
       loadc 20   ; define local var z
       loadr 1    ; now copy local var x on stack
       loadr 2    ; now copy local var y on stack
       add        ; x+y
       add        ; (x+y) + z
       storer -3  ; put top of stack in return var
       return     ; 
       